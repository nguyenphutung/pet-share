{"version":3,"sources":["img/logo.png","config.js","axios.js","components/SearchField.js","components/ProfilePanel.js","components/NavBar.js","components/PetImage.js","components/MainContent.js","containers/HomeScreen.js","containers/DetailScreen.js","containers/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","config","rootPath","process","REACT_APP_STATE","axios","create","baseURL","withCredentials","SearchField","_handleTextChange","event","_this","props","onSearchChange","target","value","react_default","a","createElement","className","onChange","this","type","placeholder","Component","ProfilePanel","username","NavBar","src","logo","alt","components_SearchField","components_ProfilePanel","PetImage","comments","img","comment","map","style","borderTop","class","createdBy","content","imageUrl","title","description","MainContent","allImages","images","key","_id","Link","to","concat","components_PetImage","HomeScreen","state","searchString","_onSearchChange","text","setState","_this2","get","then","data","console","log","setTimeout","catch","err","error","_this3","displayedImages","filter","includes","components_NavBar","components_MainContent","DetailScreen","match","params","imageId","image","LoginPage","_handleUserInput","inputUsername","_handlePassInput","inputPassword","onSubmit","onLogin","App","userString","passString","_inputUsername","_inputPassword","_onLogin","preventDefault","post","password","response","id","history","push","Route","exact","path","render","containers_LoginPage","Object","assign","containers_HomeScreen","containers_DetailScreen","withRouter","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.537c6db4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d2cd7cce.png\";","export default {\r\n  rootPath: process.env.REACT_APP_STATE === \"localhost\"\r\n    ? \"http://localhost:6969\"\r\n    : \"\"\r\n};\r\n","import axios from 'axios';\r\nimport config from './config'\r\n\r\nexport default axios.create({\r\n  baseURL: config.rootPath,\r\n  withCredentials: true\r\n})\r\n","import React, {Component} from 'react';\r\n\r\nclass SearchField extends Component {\r\n  _handleTextChange = event =>{\r\n    this.props.onSearchChange(event.target.value)\r\n  }\r\n  render() {\r\n    return (\r\n      <form className=\"col-3\">\r\n        <input onChange={this._handleTextChange} className=\"form-control\" type=\"text\" placeholder=\"Search\"/>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchField;\r\n","import React, { Component } from 'react';\r\n\r\nclass ProfilePanel extends Component {\r\n  render() {\r\n    // const display = this.props.username ? (\r\n    //   <div>\r\n    //     <span className=\"navbar-text\">Welcome, {this.props.username}</span>\r\n    //   </div>\r\n    // ) : (\r\n    //   <button className=\"btn btn-primary btn-block\" onClick={this.props.onLogin}>\r\n    //     Login\r\n    //   </button>\r\n    // );\r\n    return (\r\n      <div className=\"col-3 profile-panel text-right\">\r\n        <span className=\"navbar-text\">Welcome, {this.props.username}</span>\r\n        <span className=\"navbar-text\">Welcome, {this.props.username}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProfilePanel;\r\n","import React, {Component} from 'react';\r\nimport SearchField from './SearchField';\r\nimport logo from '../img/logo.png';\r\nimport ProfilePanel from './ProfilePanel';\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <div  className=\"navbar navbar-expand\">\r\n        <div className=\"container\">\r\n          <div className=\"col-6 text-center\">\r\n            <img src={logo} alt= \"logo\"/>\r\n          </div>\r\n          <SearchField onSearchChange= {this.props.onSearchChange}/>\r\n          <ProfilePanel username = {this.props.username}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, {Component} from 'react';\r\nimport config from \"../config\";\r\n\r\nclass PetImage extends Component {\r\n  render () {\r\n    const comments = this.props.img.comment ? this.props.img.comment.map(comment =>\r\n      <p style={{borderTop: \"1px solid #cccccc\"}}>\r\n        <span class=\"font-weight-bold\">{comment.createdBy.username}</span>\r\n        : {comment.content}\r\n      </p>) : \"\";\r\n    return (\r\n      <div className = \"pet_image\">\r\n        <img className=\"img-fluid\" src={config.rootPath + this.props.img.imageUrl} alt={this.props.img.title}/>\r\n        <h4>{this.props.img.title}</h4>\r\n        <p>{this.props.img.description}</p>\r\n        {comments}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PetImage;\r\n","import React, {Component} from 'react'\r\nimport PetImage from \"./PetImage\";\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass MainContent extends Component {\r\n  render () {\r\n\r\n    const allImages = this.props.images.map(img =>(\r\n      <div key={img._id} className=\"col-3\">\r\n        <Link to = {`images/${img._id}`}>\r\n          <PetImage img = {img}/>\r\n        </Link>\r\n      </div>\r\n    ));\r\n    return (\r\n      <div className=\"container main_content\">\r\n        <div className=\"row\">\r\n          {allImages}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContent;\r\n","import React, {Component} from 'react'\r\nimport axios from '../axios'\r\nimport NavBar from '../components/NavBar';\r\nimport MainContent from \"../components/MainContent\";\r\n\r\nclass HomeScreen extends Component {\r\n  state = {\r\n    images: [],\r\n    searchString: \"\",\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios\r\n    .get(\"/api/images\")\r\n    .then(data => {\r\n      console.log(data.data);\r\n      setTimeout(() => {\r\n        this.setState({images: data.data,\r\n        });\r\n      }, 1000);\r\n    })\r\n    .catch(err => console.error(err));\r\n  }\r\n\r\n  _onSearchChange = text => this.setState({searchString: text});\r\n\r\n  render () {\r\n    const displayedImages = this.state.images.filter(img => img.title.includes(this.state.searchString) || img.description.includes(this.state.searchString))\r\n    return (\r\n      <div>\r\n        <NavBar onSearchChange = {this._onSearchChange} username= {this.props.username}/>\r\n        <MainContent images = {displayedImages}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, {Component} from 'react'\r\nimport axios from '../axios'\r\nimport NavBar from '../components/NavBar';\r\nimport PetImage from \"../components/PetImage\"\r\n\r\nclass DetailScreen extends Component {\r\n  state = {\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios\r\n    .get(`/api/images/${this.props.match.params.imageId}`)\r\n    .then(data => {\r\n      console.log(data.data);\r\n        this.setState({image: data.data,\r\n      });\r\n    })\r\n    .catch(err => console.error(err));\r\n  }\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavBar onSearchChange = {this._onSearchChange} username= {this.props.username}/>\r\n        <div className=\"main_content container\">\r\n          <div className = \"row\">\r\n            <div className = \"col-8 mr-auto ml-auto\">\r\n              {this.state.image ? <PetImage img={this.state.image}/> : \"\"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetailScreen;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nclass LoginPage extends Component {\r\n  _handleUserInput = event =>{\r\n    this.props.inputUsername(event.target.value)\r\n  }\r\n  _handlePassInput = event =>{\r\n    this.props.inputPassword(event.target.value)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className = \"container\" onSubmit= {this.props.onLogin}>\r\n          <div className=\"form-group\">\r\n            <label>Username</label>\r\n            <input onChange = {this._handleUserInput} type=\"text\" className=\"form-control\" placeholder=\"Enter username\"/>\r\n            <small className=\"form-text text-muted\">We'll never share your account with anyone else.</small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <input onChange = {this._handlePassInput} type=\"password\" className=\"form-control\" placeholder=\"Password\"/>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport axios from './axios'\n\nimport HomeScreen from \"./containers/HomeScreen\"\nimport DetailScreen from \"./containers/DetailScreen\"\nimport LoginPage from \"./containers/LoginPage\"\n\nimport {Route, withRouter} from 'react-router-dom'\n\nclass App extends Component {\n  state = {\n    userString: \"\",\n    passString: \"\",\n  };\n\n  componentDidMount(){\n    axios\n    .get(\"/api/auth/checksession\")\n    .then(data => {\n      console.log(data.data.username);\n      this.setState({userString: data.data.username})\n      this.props.history.push(\"/\")\n    })\n    .catch(err => console.error(err));\n  }\n\n  _inputUsername = text => this.setState({userString: text});\n  _inputPassword = text => this.setState({passString: text});\n\n  _onLogin = (event) => {\n    event.preventDefault();\n    axios\n    .post(\"/api/auth\", {\n      username: this.state.userString,\n      password: this.state.passString\n    })\n    .then(response => {\n      this.setState({\n        username: response.data.username,\n        id: response.data.id,\n      });\n      this.props.history.push(\"/\");\n    }\n    )\n    .catch(err => console.log(err));\n  }\n\n\n  render() {\n    return (\n        <div className=\"App\">\n          <Route exact path = \"/login\" render = {(props) => {\n              return <LoginPage {...props} inputUsername = {this._inputUsername} inputPassword = {this._inputPassword} onLogin = {this._onLogin}/>;\n            }}/>\n          <Route exact path = \"/\" render = {(props) => {\n              if(!this.state.username) {\n                this.props.history.push(\"/login\")\n                return \"\";\n              }\n              return <HomeScreen {...props} username = {this.state.username}/>;\n            }}/>\n          <Route path = \"/images/:imageId\" render = {(props) => {\n              return <DetailScreen {...props} username = {this.state.username}/>;\n            }}/>\n        </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}